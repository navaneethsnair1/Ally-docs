name: Docs Ally Tests- OL API

on:
  push:
    branches:
      - main
  workflow_dispatch:
 
jobs:
  openliberty-api:
    runs-on: ubuntu-latest
    container: cypress/included:13.9.0
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cleanup previous results
        run: rm -rf /__w/Ally-docs/Ally-docs/cypress-docs/results/*

      - name: Cleanup Cypress Cache
        run: rm -rf ~/.cache/Cypress

      - name: Run first test file
        run: |
          cypress run --browser chrome --headed \
          --env JDK_VERSION="1.8.0_311" \
          --config-file /__w/Ally-docs/Ally-docs/cypress-docs/cypress.config.js \
          --spec "/__w/Ally-docs/Ally-docs/cypress-docs/cypress/e2e/general_tests.cy.js" 
      - name: Debug - List files
        run: ls -R /__w/Ally-docs/Ally-docs/cypress-docs/results

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Check Accessibility Violations
        id: check_violations
        run: |
          node <<'EOF'
          import fs from 'fs';
          import path from 'path';

          const resultsDir = '/__w/Ally-docs/Ally-docs/cypress-docs/results/OL.io';
          const files = fs.readdirSync(resultsDir).filter(f => f.endsWith('.json'));

          const violatingFiles = [];

          for (const file of files) {
            const filePath = path.join(resultsDir, file);
            try {
              const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
              const violations = data?.summary?.counts?.violation ?? 0;
              if (violations > 0) violatingFiles.push(file);
            } catch (err) {
              console.error(`Error reading ${file}:`, err);
            }
          }

          if (violatingFiles.length > 0) {
            console.log(`::set-output name=violation_files::${violatingFiles.join(', ')}`);
            console.log('Accessibility violations found in:', violatingFiles);
          } else {
            console.log('No accessibility violations found.');
          }
          EOF

      - name: Generate issue body
        if: steps.check_violations.outputs.violation_files != ''
        run: |
          echo "### Accessibility Violations Detected" > issue.md
          echo "" >> issue.md
          echo "The following result files contain accessibility violations:" >> issue.md
          echo "${{ steps.check_violations.outputs.violation_files }}" >> issue.md
          echo "" >> issue.md
          echo "_This issue was automatically created by the accessibility test workflow._" >> issue.md
    

      - name: Create GitHub Issue if Violations Exist
        if: steps.check_violations.outputs.violation_files != ''
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: Accessibility violations detected
          content-filepath: issue.md
          labels: a11y, automated

